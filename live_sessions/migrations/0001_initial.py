# Generated by Django 5.1.5 on 2025-08-03 08:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_time', models.DateTimeField(verbose_name='Heure de début')),
                ('end_time', models.DateTimeField(verbose_name='Heure de fin')),
                ('timezone', models.CharField(default='Africa/Kinshasa', max_length=50, verbose_name='Fuseau horaire')),
                ('max_participants', models.PositiveIntegerField(default=100, verbose_name='Nombre max de participants')),
                ('status', models.CharField(choices=[('scheduled', 'Programmée'), ('live', 'En direct'), ('ended', 'Terminée'), ('cancelled', 'Annulée')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='ID Session')),
                ('meeting_url', models.URLField(blank=True, verbose_name='URL de la réunion')),
                ('recording_url', models.URLField(blank=True, verbose_name="URL d'enregistrement")),
                ('presentation_file', models.FileField(blank=True, upload_to='live_sessions/presentations/', verbose_name='Fichier de présentation')),
                ('is_recorded', models.BooleanField(default=True, verbose_name='Enregistrer la session')),
                ('is_public', models.BooleanField(default=False, verbose_name='Session publique')),
                ('requires_enrollment', models.BooleanField(default=True, verbose_name='Inscription requise')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Cours associé')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Formateur')),
            ],
            options={
                'verbose_name': 'Session Live',
                'verbose_name_plural': 'Sessions Live',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='SessionParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Rejoint le')),
                ('left_at', models.DateTimeField(blank=True, null=True, verbose_name='Quitté le')),
                ('is_present', models.BooleanField(default=False, verbose_name='Présent')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='live_sessions.livesession', verbose_name='Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Participant de session',
                'verbose_name_plural': 'Participants de session',
                'unique_together': {('session', 'user')},
            },
        ),
        migrations.AddField(
            model_name='livesession',
            name='participants',
            field=models.ManyToManyField(related_name='attended_sessions', through='live_sessions.SessionParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Participants'),
        ),
        migrations.CreateModel(
            name='SessionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(blank=True, verbose_name='Réponse')),
                ('is_answered', models.BooleanField(default=False, verbose_name='Répondu')),
                ('is_public', models.BooleanField(default=True, verbose_name='Question publique')),
                ('asked_at', models.DateTimeField(auto_now_add=True, verbose_name='Posée le')),
                ('answered_at', models.DateTimeField(blank=True, null=True, verbose_name='Répondu le')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='live_sessions.livesession', verbose_name='Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Question de session',
                'verbose_name_plural': 'Questions de session',
                'ordering': ['asked_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(blank=True, upload_to='live_sessions/resources/', verbose_name='Fichier')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('shared_at', models.DateTimeField(auto_now_add=True, verbose_name='Partagé le')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='live_sessions.livesession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Ressource de session',
                'verbose_name_plural': 'Ressources de session',
                'ordering': ['shared_at'],
            },
        ),
    ]
